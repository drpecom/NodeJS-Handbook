ES 6,7 and 8 updates

1. Module updates

2. Let and Const
var used in blocks will be hoisted and the outer scope
let provides block scope

3. Aysnc and Await and Promise


4. Backticks for template strings 

`${value +2} some line
line 2 str`

5. Destructuring objects and Spread operator

const { firstname, lastname} = jsonobject
const { firstname: fn, lastname: ln } = jsonobject
let [firstobj, secondobj, ...others] = jsonarray
let array2 = [...array1] //creates a new array


6. Object literals

fun(a ,b) {
	return {a, b}
}
creates {'a': a, 'b':b}

function addressMaker(adder){
	const newAddress = {
		city: adder.city,
		state: adder.state,
		country: 'US'
	};
}

function addressMaker(adder){
	const {city, state} = adder
	const newAddress = {
		city,
		state,
		country: 'US',
		..others
	};
}

7. For of - loops
let incomes = [100, 200, 300]
let total = 0
for (const income of incomes) {
	total += income
}
Works with any Iterable; best practice to use const so that it doesn't get modified accidently

8. Rest operator
To get the args out of function
function(nums) {
	console.log(arguments)//deprecated
}

function(...nums) {
	nums is a array that can be accessed inside
}

9. Arrow function

replace callbacks with => : but this is not available

let totals = nums.reduce(function(x, y) { return x+y;});
let totals = nums.reduce((x, y) => { return x+y; });
let totals = nums.reduce((x, y) => x+y);

10. Default parameter

function add(numArray = []) {
	let total =0;
	numArray.forEach( (e) => totals=e)
}

11. Includes
to check if an array had a value we used to say numArray.indexOf(num) => -1 if not 
numArray.includes(num) -> returns true/false

12. Classes, static functions and get

13. Trailing commas

14. Sets


- Do not allow easy passwords


New usecases:
Send email for email verification
Password reset

JSON and usecase:
http://toon.io/on-passportjs-specific-use-cases/

Project Structure:
https://softwareontheroad.com/ideal-nodejs-project-structure/

For REST:
https://medium.com/@_aerdeljac/creating-a-rest-api-backend-using-express-js-7710d3310b79
https://www.freecodecamp.org/news/learn-how-to-handle-authentication-with-node-using-passport-js-4a56ed18e81e/



https://stackoverflow.com/a/16383925/548634

Refactoring notes:

https://dev.to/nedsoft/a-clean-approach-to-using-express-validator-8go

Fixing imports
1. change to ES6 practice of using const or let (not var)
2. choosing correctly between { } imports - called object destructuring 
	Note: https://stackoverflow.com/a/53998071/548634
3. Fix deprecated functions
4. Fix TODOs
5. https://attacomsian.com/blog/express-file-upload-multer
6. https://javascript.info/promise-basics

For later:
1. Check along this checklist of best practices: https://github.com/goldbergyoni/nodebestpractices
2. Password encryption before saving using bcryptjs ->
3. Display only relavent nav links (logged-in/out) ->
4. https://dev.to/santypk4/bulletproof-node-js-project-architecture-4epf
5. https://nestjs.com/
6. Mongo video series
7. https://blog.risingstack.com/top-nodejs-microservices-articles-risingstack/
8. Async and Await: https://blog.risingstack.com/mastering-async-await-in-nodejs/
9. https://medium.com/@benlesh/rxjs-observable-interop-with-promises-and-async-await-bebb05306875
Demo:
https://github.com/madhums/node-express-mongoose-demo/blob/master/app/controllers/users.js


